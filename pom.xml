<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>app</groupId>
  <artifactId>MySpringMVCApp</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>MySpringMVCApp Maven Webapp</name>
  <url>http://maven.apache.org</url>

  <properties>
  	  <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
      <junit.version>[4.11,)</junit.version>
      <log4j.version>[1.2,)</log4j.version>
      <jdk.version>1.6</jdk.version>
      <jetty.version></jetty.version>
      <!-- mongodb.version>[2.2,)</mongodb.version-->
      <spring.version>3.2.0.RELEASE</spring.version>
      <spring.mongodb.version>1.0.3.RELEASE</spring.mongodb.version> 
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    
    <!--  
        Support for testing Spring applications with tools such as JUnit and TestNG  
        This artifact is generally always defined with a 'test' scope for the integration testing framework and unit testing stubs  
    --> 
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>${spring.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>${log4j.version}</version>
    </dependency>

	<!-- native java driver will be deleted in future 
    <dependency>
      <groupId>org.mongodb</groupId>
      <artifactId>mongo-java-driver</artifactId>
      <version>${mongodb.version}</version>
    </dependency-->

	<!--  
        Core utilities used by other modules.  
        Define this if you use Spring Utility APIs (org.springframework.core.*/org.springframework.util.*)  
    -->  
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <!--  
        Application Context (depends on spring-core, spring-expression, spring-aop, spring-beans)  
        This is the central artifact for Spring's Dependency Injection Container and is generally always defined  
    --> 
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${spring.version}</version>
    </dependency>
    
    
    <dependency>
      <groupId>org.springframework.data</groupId>
      <artifactId>spring-data-mongodb</artifactId>
      <version>${spring.mongodb.version}</version>
    </dependency>

	<!--  
        Web application development utilities applicable to both Servlet and Portlet Environments  
        (depends on spring-core, spring-beans, spring-context)  
        Define this if you use Spring MVC, or wish to use Struts, JSF, or another web framework with Spring (org.springframework.web.*)  
    --> 
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>${spring.version}</version>
    </dependency>

	<!--  
        Spring MVC for Servlet Environments (depends on spring-core, spring-beans, spring-context, spring-web)  
        Define this if you use Spring MVC with a Servlet Container
    -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>${spring.version}</version>
    </dependency-->

	<!-- Will be deleted in future 
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-tx</artifactId>
      <version>${spring.version}</version>
    </dependency-->

  </dependencies>
  <build>
    <finalName>MySpringMVCApp</finalName>

    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
          <configuration>
            <source>${jdk.version}</source>
            <target>${jdk.version}</target>
          </configuration>
        </plugin>
      <plugin>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
      </plugin>
    </plugins>

  </build>
</project>
